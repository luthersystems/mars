---
# tasks file for k8s_fabric_orderer

- name: K8s namespace exists
  k8s:
    name: "{{k8s_fabric_orderer_namespace}}"
    api_version: v1
    kind: Namespace
    state: present
  environment:
    AWS_ACCESS_KEY_ID: "{{kubectl_aws_access_key_id}}"
    AWS_SECRET_ACCESS_KEY: "{{kubectl_aws_secret_access_key}}"
    AWS_SESSION_TOKEN: "{{kubectl_aws_session_token}}"
    KUBECONFIG: "{{kubectl_config_path}}"

- name: Helm chart exists
  synchronize:
    src: fabric-orderer/
    dest: "{{k8s_fabric_orderer_helm_chart_path}}"
    delete: yes
    recursive: yes
    owner: no
    group: no
    use_ssh_args: yes

- name: Helm Chart is installed
  command:
    argv:
      - helm
      - upgrade
      - --install
      - --wait
      - --namespace={{k8s_fabric_orderer_namespace}}
      - --set=global.lutherEnv={{luther_env}}
      - --set=dlt.organizationIndex={{item}}
      - --set=dlt.domain={{k8s_fabric_orderer_domain_root}}
      - --set=global.aws.region={{shiro_phylum_s3_region}}
      - --set=global.aws.staticBucket={{shiro_phylum_s3_bucket}}
      - --set=image.repository={{k8s_fabric_orderer_image_repository}}
      - --set=startService={{k8s_fabric_orderer_start_service}}
      - "fabric-orderer{{item}}"
      - "{{k8s_fabric_orderer_helm_chart_path}}"
  environment:
    AWS_ACCESS_KEY_ID: "{{kubectl_aws_access_key_id}}"
    AWS_SECRET_ACCESS_KEY: "{{kubectl_aws_secret_access_key}}"
    AWS_SESSION_TOKEN: "{{kubectl_aws_session_token}}"
    KUBECONFIG: "{{kubectl_config_path}}"
  loop: "{{range(0,k8s_fabric_orderer_cluster_size)|list}}"
