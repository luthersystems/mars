---
# tasks file for k8s_fabric_orderer loop

- name: Helm Chart is installed
  command:
    argv:
      - helm
      - upgrade
      - --install
      - --wait
      - --namespace={{k8s_fabric_orderer_namespace}}
      - --set=global.lutherProjectID={{luther_project_id}}
      - --set=global.lutherEnv={{luther_env}}
      - --set=global.hyperledger.fabricVersion={{k8s_fabric_version}}
      - --set=dlt.organization={{k8s_fabric_orderer_org}}
      - --set=dlt.organizationIndex={{item}}
      - --set=dlt.domain={{k8s_fabric_orderer_domain_root}}
      - --set=global.aws.region={{shiro_phylum_s3_region}}
      - --set=global.aws.staticBucket={{shiro_phylum_s3_bucket}}
      - --set=image.repository={{k8s_fabric_orderer_image_repository}}
      - --set=startService={{k8s_fabric_orderer_start_service}}
      - --set=persistentVolume.storageSize={{k8s_fabric_orderer_storage_size}}
      - --set=logLevel={{k8s_fabric_orderer_log_level}}
      - --set=availabilityZone={{k8s_pv_data_replica_azs[item]}}
      - "fabric-orderer{{item}}"
      - "{{k8s_fabric_orderer_helm_chart_path}}"
  environment:
    AWS_ACCESS_KEY_ID: "{{kubectl_aws_access_key_id}}"
    AWS_SECRET_ACCESS_KEY: "{{kubectl_aws_secret_access_key}}"
    AWS_SESSION_TOKEN: "{{kubectl_aws_session_token}}"
    KUBECONFIG: "{{kubectl_config_path}}"

- name: Upgrade pauser has run
  when: is_fabric_upgrade | bool
  command:
    argv:
    - "{{k8s_fabric_scripts_dir}}/upgrade-pauser.sh"
    chdir: "{{k8s_fabric_scripts_workdir}}"
  environment:
    PAUSING_AT: "orderer"
    WHICH: "{{item}}"
    CHANNEL: "luther"
    ORDERERC: "{{k8s_fabric_orderer_cluster_size}}"
    PEER_ORG: "none"
    AWS_ACCESS_KEY_ID: "{{kubectl_aws_access_key_id}}"
    AWS_SECRET_ACCESS_KEY: "{{kubectl_aws_secret_access_key}}"
    AWS_SESSION_TOKEN: "{{kubectl_aws_session_token}}"
    KUBECONFIG: "{{kubectl_config_path}}"
