apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "fabric-orderer.fullname" . }}
  labels:
    {{ include "fabric-orderer.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  strategy:
    type: Recreate
    rollingUpdate: !!null
  selector:
    matchLabels:
      {{ include "fabric-orderer.match-labels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{ include "fabric-orderer.labels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "fabric-orderer.serviceAccountName" . }}
      volumes:
        - name: storage
          persistentVolumeClaim:
            claimName: {{ list "storage" . | include "fabric-orderer.pvc" }}
        - name: genesisblock
          emptyDir: {}
        - name: msp
          emptyDir: {}
        - name: tls
          emptyDir: {}
        {{- if .Values.dlt.cryptoConfigSecret }}
        - name: fabric-crypto-config
          secret:
            secretName: {{ .Values.dlt.cryptoConfigSecret }}
        {{- end }}
        {{- if .Values.dlt.channelArtifactsConfigMap }}
        - name: fabric-channel-artifacts
          configMap:
            name: {{ .Values.dlt.channelArtifactsConfigMap }}
        {{- end }}
        {{- if .Values.dlt.hcs }}
        - name: hcs
          emptyDir: {}
        {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.global.hyperledger.fabricVersion }}{{- if .Values.dlt.hcs }}-hcs{{- end }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if .Values.startService }}
          args:
            - orderer
          {{- else }}
          command:
            - /bin/bash
            - -c
            - while true; do sleep 10; done
          {{- end }}
          workingDir: /opt/gopath/src/github.com/hyperledger/fabric
          env:
            {{- if .Values.logGrpc }}
            - name: GRPC_GO_LOG_VERBOSITY_LEVEL
              value: "99"
            - name: GRPC_GO_LOG_SEVERITY_LEVEL
              value: info
            {{- end }}
            - name: FABRIC_LOGGING_SPEC
              value: {{ .Values.logLevel }}
            - name: ORDERER_OPERATIONS_LISTENADDRESS
              value: "0.0.0.0:{{ .Values.internal.container.operationsPort }}"
            - name: ORDERER_METRICS_PROVIDER
              value: prometheus
            - name: ORDERER_GENERAL_GENESISFILE
              value: /var/hyperledger/orderer/artifacts/genesis.block
            - name: ORDERER_GENERAL_GENESISMETHOD
              value: file
            - name: ORDERER_GENERAL_LISTENADDRESS
              value: 0.0.0.0
            - name: ORDERER_GENERAL_LISTENPORT
              value: {{ .Values.internal.container.servicePort | print | toJson }}
            - name: ORDERER_GENERAL_LOCALMSPDIR
              value: /var/hyperledger/orderer/msp
            - name: ORDERER_GENERAL_LOCALMSPID
              value: OrdererMSP
            - name: ORDERER_GENERAL_TLS_ENABLED
              value: "true"
            - name: ORDERER_GENERAL_TLS_CERTIFICATE
              value: /var/hyperledger/orderer/tls/server.crt
            - name: ORDERER_GENERAL_TLS_PRIVATEKEY
              value: /var/hyperledger/orderer/tls/server.key
            - name: ORDERER_GENERAL_TLS_ROOTCAS
              value: '[/var/hyperledger/orderer/tls/ca.crt]'
            - name: ORDERER_GENERAL_KEEPALIVE_SERVERMININTERVAL
              value: {{ .Values.internal.container.keepaliveMinInterval }}
            - name: ORDERER_GENERAL_CLUSTER_CLIENTCERTIFICATE
              value: /var/hyperledger/orderer/tls/server.crt
            - name: ORDERER_GENERAL_CLUSTER_CLIENTPRIVATEKEY
              value: /var/hyperledger/orderer/tls/server.key
            - name: ORDERER_GENERAL_CLUSTER_ROOTCAS
              value: '[/var/hyperledger/orderer/tls/ca.crt]'
            - name: ORDERER_GENERAL_CLUSTER_SENDBUFFERSIZE
              value: "100"
            # NOTE General.Cluster.ListenPort, General.Cluster.ListenAddress,
            # General.Cluster.ServerCertificate, and General.Cluster.ServerPrivateKey
            # are inherited from the orderer's General.TLS configuration.  None
            # should be set.
            - name: ORDERER_CONSENSUS_WALDIR
              value: /var/hyperledger/production/orderer/etcdraft/wal
            - name: ORDERER_CONSENSUS_SNAPDIR
              value: /var/hyperledger/production/orderer/etcdraft/snapshot
            {{- if .Values.dlt.hcs }}
            - name: ORDERER_HCS_OPERATOR_ID
              value: {{ .Values.dlt.hcsOperatorId }}
            - name: ORDERER_HCS_OPERATOR_PRIVATEKEY_TYPE
              value: ed25519
            - name: ORDERER_HCS_OPERATOR_PRIVATEKEY_KEY
              value: {{ .Values.dlt.hcsOperatorPrivateKey }}
            - name: ORDERER_HCS_BLOCKCIPHER_TYPE
              value: aes-256-gcm
            - name: ORDERER_HCS_BLOCKCIPHER_KEY_FILE
              value: /var/hyperledger/orderer/hcs/aes.key
            {{- end }}
          ports:
            - name: grpc
              containerPort: {{ .Values.internal.container.servicePort }}
              protocol: TCP
            - name: http-op
              containerPort: {{ .Values.internal.container.operationsPort }}
              protocol: TCP
          {{- if .Values.startService }}
          livenessProbe:
            httpGet:
              path: /healthz
              port: http-op
            failureThreshold: 1
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /healthz
              port: http-op
            initialDelaySeconds: 5
            periodSeconds: 5
          startupProbe:
            httpGet:
              path: /healthz
              port: http-op
            failureThreshold: 30
            periodSeconds: 10
          {{- end }}
          volumeMounts:
            - name: storage
              mountPath: /var/hyperledger/production
            - name: genesisblock
              mountPath: /var/hyperledger/orderer/artifacts
            - name: msp
              mountPath: /var/hyperledger/orderer/msp
            - name: tls
              mountPath: /var/hyperledger/orderer/tls
            {{- if .Values.dlt.hcs }}
            - name: hcs
              mountPath: /var/hyperledger/orderer/hcs
            {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      initContainers:
        {{- if and .Values.dlt.cryptoConfigSecret .Values.dlt.channelArtifactsConfigMap  }}
        - name: config-setup
          image: busybox:1.35.0
          args:
            - sh
            - -c
            - |
              set -xe;

              cd /tmp

              cp /opt/channel-artifacts/channel-artifacts.zip /tmp
              unzip channel-artifacts.zip
              mv channel-artifacts/* /channel-artifacts

              cp /opt/crypto-config/crypto-config.zip /tmp
              unzip crypto-config.zip
              cd crypto-config

              mv ordererOrganizations/{{ .Values.dlt.domain }}/orderers/{{ include "fabric-orderer.self-fqdn" . }}/msp/* /msp
              mv ordererOrganizations/{{ .Values.dlt.domain }}/orderers/{{ include "fabric-orderer.self-fqdn" . }}/tls/* /tls

              {{- if .Values.dlt.hcs }}
              mv aes.key /hcs/
              {{- end }}
          volumeMounts:
            - name: genesisblock
              mountPath: /channel-artifacts
            - name: msp
              mountPath: /msp
            - name: tls
              mountPath: /tls
            {{- if .Values.dlt.hcs }}
            - name: hcs
              mountPath: /hcs
            {{- end }}
            - name: fabric-crypto-config
              mountPath: /opt/crypto-config
              readOnly: true
            - name: fabric-channel-artifacts
              mountPath: /opt/channel-artifacts
              readOnly: true
        {{- else }}
        - name: config-fetch
          image: "amazon/aws-cli:{{ .Values.awsCLIVersion }}"
          env:
            - name: AWS_REGION
              value: {{ .Values.global.aws.region }}
            - name: S3_BUCKET
              value: {{ .Values.global.aws.staticBucket }}
            - name: LUTHER_ENV
              value: {{ .Values.global.lutherEnv }}
          command: ["sh", "-c"]
          args:
            - |
              set -xe;
              aws s3 cp --recursive s3://$S3_BUCKET/$LUTHER_ENV/fabric-artifacts/channel-artifacts/ /channel-artifacts
              aws s3 cp --recursive s3://$S3_BUCKET/$LUTHER_ENV/fabric-artifacts/crypto-config/ordererOrganizations/{{ .Values.dlt.domain }}/orderers/{{ include "fabric-orderer.self-fqdn" . }}/msp/ /msp
              aws s3 cp --recursive s3://$S3_BUCKET/$LUTHER_ENV/fabric-artifacts/crypto-config/ordererOrganizations/{{ .Values.dlt.domain }}/orderers/{{ include "fabric-orderer.self-fqdn" . }}/tls/ /tls
              {{- if .Values.dlt.hcs }}
              aws s3 cp s3://$S3_BUCKET/$LUTHER_ENV/fabric-artifacts/crypto-config/aes.key /hcs/
              {{- end }}
          volumeMounts:
            - name: genesisblock
              mountPath: /channel-artifacts
            - name: msp
              mountPath: /msp
            - name: tls
              mountPath: /tls
            {{- if .Values.dlt.hcs }}
            - name: hcs
              mountPath: /hcs
            {{- end }}
        {{- end }}
      nodeSelector:
        topology.kubernetes.io/zone: {{ .Values.availabilityZone }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
