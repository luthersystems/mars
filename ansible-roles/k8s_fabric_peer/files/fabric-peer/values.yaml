# Default values for fabric-peer.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

global:
  lutherEnv: dev
  partOf: fabric
  hyperledger:
    fabricVersion: 1.4.2
  aws:
    region: ""
    staticBucket: ""

replicaCount: 1

# coreConfigMap is the name of a ConfigMap resource that contains a core.yaml
# configuration file.
coreConfigMap: fabric-peer-config

dlt:
  component: bcpeer
  organization: org1
  mspID: Org1MSP
  peerIndex: 0
  domain: luther.systems

image:
  repository: hyperledger/fabric-peer
  arch: amd64
  pullPolicy: IfNotPresent

substrate:
  version: 2.96.0
  s3:
    region: eu-west-2
    bucket: luther-common-ln-common-external-s3-44lp

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

internal:
  container:
    servicePort: 7053
    chaincodePort: 7052
    gossipPort: 7051
    operationsPort: 9443
    invokeTimeout: 30s

persistentVolume:
  storageClassName: gp2
  storageSize: 10Gi
  dockerStorageSize: 10Gi

service:
  type: LoadBalancer
  port: 7053
  loadBalancerSourceRanges:
    - 10.0.0.0/8

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths: []

  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

startService: true
