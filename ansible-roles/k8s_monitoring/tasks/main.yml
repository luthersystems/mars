---
# tasks file for k8s_monitoring

- name: Monitoring namespace exists
  k8s:
    name: "{{k8s_monitoring_namespace}}"
    api_version: v1
    kind: Namespace
    state: present
  environment:
    AWS_ACCESS_KEY_ID: "{{kubectl_aws_access_key_id}}"
    AWS_SECRET_ACCESS_KEY: "{{kubectl_aws_secret_access_key}}"
    AWS_SESSION_TOKEN: "{{kubectl_aws_session_token}}"
    KUBECONFIG: "{{kubectl_config_path}}"

- name: Alertmanager config exists
  k8s:
    namespace: "{{k8s_monitoring_namespace}}"
    name: "{{prometheus_alertmanager_configmap_fullname}}"
    api_version: v1
    kind: ConfigMap
    resource_definition:
      data: "{{prometheus_alertmanager_configmap_data}}"
    state: present
  environment:
    AWS_ACCESS_KEY_ID: "{{kubectl_aws_access_key_id}}"
    AWS_SECRET_ACCESS_KEY: "{{kubectl_aws_secret_access_key}}"
    AWS_SESSION_TOKEN: "{{kubectl_aws_session_token}}"
    KUBECONFIG: "{{kubectl_config_path}}"

- name: Grafana admin credentials exist
  k8s:
    namespace: "{{k8s_monitoring_namespace}}"
    name: "{{grafana_credentials_secret_name}}"
    api_version: v1
    kind: Secret
    resource_definition:
      data:
        admin-user: "{{grafana_admin_user | b64encode}}"
        admin-password: "{{grafana_admin_password | b64encode}}"
    state: present
  environment:
    AWS_ACCESS_KEY_ID: "{{kubectl_aws_access_key_id}}"
    AWS_SECRET_ACCESS_KEY: "{{kubectl_aws_secret_access_key}}"
    AWS_SESSION_TOKEN: "{{kubectl_aws_session_token}}"
    KUBECONFIG: "{{kubectl_config_path}}"

- name: Google OAuth client credentials exist
  k8s:
    namespace: "{{k8s_monitoring_namespace}}"
    name: "{{grafana_env_secret_name}}"
    api_version: v1
    kind: Secret
    resource_definition:
      data:
        GF_AUTH_GOOGLE_CLIENT_ID: "{{grafana_google_client_id | b64encode}}"
        GF_AUTH_GOOGLE_CLIENT_SECRET: "{{grafana_google_client_secret | b64encode}}"
    state: present
  environment:
    AWS_ACCESS_KEY_ID: "{{kubectl_aws_access_key_id}}"
    AWS_SECRET_ACCESS_KEY: "{{kubectl_aws_secret_access_key}}"
    AWS_SESSION_TOKEN: "{{kubectl_aws_session_token}}"
    KUBECONFIG: "{{kubectl_config_path}}"

- name: Grafana dashboards configmap directory exists
  file:
    path: "{{grafana_dashboard_configmap_path | dirname}}"
    state: directory
    recurse: true

- name: Grafana dashboards configmap definition exists
  template:
    src: dashboard_configmap.yaml.j2
    dest: "{{grafana_dashboard_configmap_path}}"

- name: Grafana dashboards configmap exists
  k8s:
    src: "{{grafana_dashboard_configmap_path}}"
  environment:
    AWS_ACCESS_KEY_ID: "{{kubectl_aws_access_key_id}}"
    AWS_SECRET_ACCESS_KEY: "{{kubectl_aws_secret_access_key}}"
    AWS_SESSION_TOKEN: "{{kubectl_aws_session_token}}"
    KUBECONFIG: "{{kubectl_config_path}}"

- name: Chart values directory exists
  file:
    path: "{{k8s_monitoring_chart_values_path | dirname}}"
    state: directory
    recurse: true

- name: Chart values exist
  template:
    src: values.yaml.j2
    dest: "{{k8s_monitoring_chart_values_path}}"

- name: Helm chart exists
  synchronize:
    src: monitoring-umbrella/
    dest: "{{k8s_monitoring_chart_path}}"
    delete: yes
    recursive: yes
    owner: no
    group: no
    use_ssh_args: yes

- name: Helm chart is installed
  command:
    argv:
      - helm
      - upgrade
      - --install
      - --wait
      - --values={{k8s_monitoring_chart_values_path}}
      - --namespace={{k8s_monitoring_namespace}}
      - '{{k8s_monitoring_helm_release}}'
      - '{{k8s_monitoring_chart_path}}'
  environment:
    AWS_ACCESS_KEY_ID: "{{kubectl_aws_access_key_id}}"
    AWS_SECRET_ACCESS_KEY: "{{kubectl_aws_secret_access_key}}"
    AWS_SESSION_TOKEN: "{{kubectl_aws_session_token}}"
    KUBECONFIG: "{{kubectl_config_path}}"
