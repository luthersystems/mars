{{/* vim: set filetype=mustache: */}}
{{/*
Expand the name of the chart.
*/}}
{{- define "ingress.name" -}}
{{- default .Chart.Name .Values.nameOverride | trunc 63 | trimSuffix "-" -}}
{{- end -}}

{{/*
Create a default fully qualified app name.
We truncate at 63 chars because some Kubernetes name fields are limited to this (by the DNS naming spec).
If release name contains chart name it will be used as a full name.
*/}}
{{- define "ingress.fullname" -}}
{{- if .Values.fullnameOverride -}}
{{- .Values.fullnameOverride | trunc 63 | trimSuffix "-" -}}
{{- else -}}
{{- $name := default .Chart.Name .Values.nameOverride -}}
{{- if contains $name .Release.Name -}}
{{- .Release.Name | trunc 63 | trimSuffix "-" -}}
{{- else -}}
{{- printf "%s-%s" .Release.Name $name | trunc 63 | trimSuffix "-" -}}
{{- end -}}
{{- end -}}
{{- end -}}

{{/*
Create a fully qualified name for an arbitrary service from a child chart.
This follows the same logic as the default fullname template generated by helm
but assumes that fullnameOverride and nameOverride are not (because they are
internal to child charts).

To render this template pass it a list with the first argument equal to the
release name (i.e. .Release.Name) and the second value equal to the chart
name.

  {{ list .Release.Name .service | include "ingress.service-name" }}
*/}}
{{- define "ingress.service-name" -}}
{{- printf "%s-%s" (index . 0) (index . 1) | trunc 63 | trimSuffix "-" -}}
{{- end -}}

{{/*
Create chart name and version as used by the chart label.
*/}}
{{- define "ingress.chart" -}}
{{- printf "%s-%s" .Chart.Name .Chart.Version | replace "+" "_" | trunc 63 | trimSuffix "-" -}}
{{- end -}}

{{/*
Common labels
*/}}
{{- define "ingress.labels" -}}
app.kubernetes.io/name: {{ include "ingress.name" . }}
helm.sh/chart: {{ include "ingress.chart" . }}
app.kubernetes.io/instance: {{ .Release.Name }}
{{- if .Chart.AppVersion }}
app.kubernetes.io/version: {{ .Chart.AppVersion | quote }}
{{- end }}
app.kubernetes.io/managed-by: {{ .Release.Service }}
app.kubernetes.io/component: {{ .Values.component }}
app.kubernetes.io/part-of: {{ .Values.global.partOf }}
{{- end -}}


{{/*
Template to construct the ALB attributes.
*/}}
{{- define "ingress.albAttributes" -}}
{{- $attrs := "" -}}

{{- if and (hasKey .Values.logging "bucket") (ne .Values.logging.bucket "") }}
{{- $attrs = printf "access_logs.s3.enabled=true,access_logs.s3.bucket=%s,access_logs.s3.prefix=%s" .Values.logging.bucket .Values.logging.prefix -}}
{{- end -}}

{{- if hasKey .Values.loadBalancer "idleTimeout" }}
{{- if ne $attrs "" }}
{{- $attrs = printf "%s,idle_timeout.timeout_seconds=%d" $attrs (int .Values.loadBalancer.idleTimeout) -}}
{{- else }}
{{- $attrs = printf "idle_timeout.timeout_seconds=%d" (int .Values.loadBalancer.idleTimeout) -}}
{{- end -}}
{{- end -}}

{{- $attrs -}}
{{- end -}}
